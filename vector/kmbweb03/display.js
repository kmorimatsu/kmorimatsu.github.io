/**********************************
* KM-BASIC web written by Katsumi *
*     This script is released     *
*       under the LGPL v2.1.      *
**********************************/

/*
	Notes:
	The number of palettes is stricted to 16.

*/

display=new Object();

display.chars=Array(16);
display.palette=Array(16);
display.vram=Array(30*27*2);
display.peek=function(addr){
	return this.vram[addr];
};
display.poke=function(addr,data){
	this.vram[addr]=data;
};
display.init=function(){
	var i,r,g,b,x,y;
	// Set the contexts.
	this.context=dom.getContext("display");
	this.fontContext=dom.getContext("font");
	// Initialize palette
	this.currentpalette=7;
	for(i=0;i<8;i++){
		b=255*(i&1);
		r=255*((i>>1)&1);
		g=255*(i>>2);
		this.palette[i]="rgb("+r.toString(10)+","+g.toString(10)+","+b.toString(10)+")";
	}
	for(i=8;i<16;i++){
		this.palette[i]="rgb(255,255,255)";
	}
	// Initialize vram
	for(i=0;i<30*27;i++){
		this.vram[i]=0x20;
		this.vram[i+30*27]=this.currentpalette;
	}
	// Prepare font characters.
	this.setbgcolor(0,0,0);
};
display.bgcolor="rgb(0,0,0)";
display.setbgcolor=function(r,g,b){
	var i;
	this.bgcolor="rgb("+r.toString(10)+","+g.toString(10)+","+b.toString(10)+")";
	for(i=0;i<16;i++){
		this.setfont(i);
	}
	this.refresh();
};
display.setpalette=function(pnum,r,g,b){
	this.palette[pnum]="rgb("+r.toString(10)+","+g.toString(10)+","+b.toString(10)+")";
	this.setfont(pnum);
	this.refresh();
};
display.setfont=function(pnum){
	var x,y,ascii;
	var r=this.bgcolor.r;
	this.chars[pnum]=Array(256);
	for(ascii=0x20;ascii<0x80;ascii++){
		for(y=0;y<8;y++){
			for(x=0;x<8;x++){
				if (this.font[(ascii-0x20)*8+y]&(1<<(8-x))){
					this.fontContext.fillStyle = this.palette[pnum];
				} else {
					this.fontContext.fillStyle = this.bgcolor;
				}
				this.fontContext.fillRect(x,y,1,1);
			}
		}
		this.chars[pnum][ascii]=this.fontContext.getImageData(0,0,8,8);
	}
};
display.cursorX=0;
display.cursorY=0;
display.cls=function(){
	this.cursorX=0;
	this.cursorY=0;
	// Initialize vram
	for(var i=0;i<30*27;i++){
		this.vram[i]=0x20;
		this.vram[30*27+i]=this.currentpalette;
	}
	// Clear screen
	for(y=0;y<27;y++){
		for(x=0;x<30;x++){
			this.context.putImageData(this.chars[this.currentpalette][0x20],x*8,y*8);
		}
	}
};
display.cursor=function(x,y){
	this.cursorX=x;
	this.cursorY=y;
};
display.color=function(pnum){
	this.currentpalette=pnum;
};
display.show=function(x,y){
	var char=this.vram[x+y*30];
	var palette=this.vram[x+(y+27)*30];
	this.context.putImageData(this.chars[palette][char&0xff],x*8,y*8);
};
display.refresh=function(){
	var x,y;
	for(x=0;x<30;x++){
		for(y=0;y<27;y++){
			this.show(x,y);
		}
	}
};
display.printchar=function(char){
	var x=this.cursorX;
	var y=this.cursorY;
	if (char==0x0d || char==0x0a) {
		this.cursorX=30;
	} else {
		if (0x20<=char && char<=0x7F) {
			this.vram[x+y*30]=char;
		} else {
			this.vram[x+y*30]=0x3F; // '?'
		}
		this.vram[x+(y+27)*30]=this.currentpalette;
		this.show(x,y);
		this.cursorX++;
	}
	if (29<this.cursorX) {
		this.cursorX=0;
		this.cursorY++;
	}
	if (26<this.cursorY) {
		this.cursorY=26;
		// Shift up
		this.context.putImageData(this.context.getImageData(0,8,240,208),0,0);
		for(y=0;y<26;y++){
			for(x=0;x<30;x++){
				this.vram[x+y*30]=this.vram[x+(y+1)*30];
				this.vram[x+(y+27)*30]=this.vram[x+(y+28)*30];
			}
		}
		// Clear the bottom line.
		for(x=0;x<30;x++){
			this.context.putImageData(this.chars[this.currentpalette][0x20],x*8,208);
			this.vram[x+26*30]=0x20;
			
		}
	}
};
display.printstr=function(str){
	var i;
	for (i=0;i<str.length;i++){
		this.printchar(str.charCodeAt(i));
	}
};
display.printcomma=function(){
	var i;
	for(i=this.cursorX%10;i<10;i++){
		this.printchar(0x20);
	}
};
display.font=[
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x10,0x10,0x10,0x10,0x00,0x00,0x10,0x00,
	0x24,0x24,0x24,0x00,0x00,0x00,0x00,0x00,
	0x24,0x24,0x7e,0x24,0x7e,0x24,0x24,0x00,
	0x10,0x3c,0x50,0x38,0x14,0x78,0x10,0x00,
	0x60,0x62,0x04,0x08,0x10,0x26,0x46,0x00,
	0x30,0x48,0x48,0x30,0x4a,0x44,0x3a,0x00,
	0x04,0x08,0x10,0x00,0x00,0x00,0x00,0x00,
	0x04,0x08,0x10,0x10,0x10,0x08,0x04,0x00,
	0x20,0x10,0x08,0x08,0x08,0x10,0x20,0x00,
	0x10,0x54,0x38,0x7c,0x38,0x54,0x10,0x00,
	0x00,0x10,0x10,0x7c,0x10,0x10,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x10,0x10,0x20,
	0x00,0x00,0x00,0x7e,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,
	0x00,0x02,0x04,0x08,0x10,0x20,0x40,0x00,
	0x3c,0x42,0x46,0x5a,0x62,0x42,0x3c,0x00,
	0x10,0x30,0x50,0x10,0x10,0x10,0x7c,0x00,
	0x3c,0x42,0x02,0x0c,0x30,0x40,0x7e,0x00,
	0x3c,0x42,0x02,0x1c,0x02,0x42,0x3c,0x00,
	0x04,0x0c,0x14,0x24,0x7e,0x04,0x04,0x00,
	0x7e,0x40,0x78,0x04,0x02,0x44,0x38,0x00,
	0x1c,0x20,0x40,0x7c,0x42,0x42,0x3c,0x00,
	0x7e,0x42,0x04,0x08,0x10,0x10,0x10,0x00,
	0x3c,0x42,0x42,0x3c,0x42,0x42,0x3c,0x00,
	0x3c,0x42,0x42,0x3e,0x02,0x04,0x38,0x00,
	0x00,0x10,0x00,0x00,0x00,0x10,0x00,0x00,
	0x00,0x10,0x00,0x00,0x00,0x10,0x10,0x20,
	0x04,0x08,0x10,0x20,0x10,0x08,0x04,0x00,
	0x00,0x00,0x7e,0x00,0x7e,0x00,0x00,0x00,
	0x20,0x10,0x08,0x04,0x08,0x10,0x20,0x00,
	0x3c,0x42,0x02,0x0c,0x10,0x00,0x10,0x00,
	0x1c,0x22,0x4a,0x56,0x48,0x20,0x1e,0x00,
	0x18,0x24,0x42,0x7e,0x42,0x42,0x42,0x00,
	0x7c,0x22,0x22,0x3c,0x22,0x22,0x7c,0x00,
	0x1c,0x22,0x40,0x40,0x40,0x22,0x1c,0x00,
	0x78,0x24,0x22,0x22,0x22,0x24,0x78,0x00,
	0x7e,0x40,0x40,0x78,0x40,0x40,0x7e,0x00,
	0x7e,0x40,0x40,0x78,0x40,0x40,0x40,0x00,
	0x1c,0x22,0x40,0x46,0x42,0x22,0x1c,0x00,
	0x42,0x42,0x42,0x7e,0x42,0x42,0x42,0x00,
	0x1c,0x08,0x08,0x08,0x08,0x08,0x1c,0x00,
	0x0e,0x04,0x04,0x04,0x04,0x44,0x38,0x00,
	0x42,0x44,0x48,0x70,0x48,0x44,0x42,0x00,
	0x40,0x40,0x40,0x40,0x40,0x40,0x7e,0x00,
	0x42,0x66,0x5a,0x5a,0x42,0x42,0x42,0x00,
	0x42,0x62,0x52,0x4a,0x46,0x42,0x42,0x00,
	0x18,0x24,0x42,0x42,0x42,0x24,0x18,0x00,
	0x7c,0x42,0x42,0x7c,0x40,0x40,0x40,0x00,
	0x18,0x24,0x42,0x42,0x4a,0x24,0x1a,0x00,
	0x7c,0x42,0x42,0x7c,0x48,0x44,0x42,0x00,
	0x3c,0x42,0x40,0x3c,0x02,0x42,0x3c,0x00,
	0x7c,0x10,0x10,0x10,0x10,0x10,0x10,0x00,
	0x42,0x42,0x42,0x42,0x42,0x42,0x3c,0x00,
	0x42,0x42,0x42,0x24,0x24,0x18,0x18,0x00,
	0x42,0x42,0x42,0x5a,0x5a,0x66,0x42,0x00,
	0x42,0x42,0x24,0x18,0x24,0x42,0x42,0x00,
	0x44,0x44,0x44,0x38,0x10,0x10,0x10,0x00,
	0x7e,0x02,0x04,0x18,0x20,0x40,0x7e,0x00,
	0x3c,0x20,0x20,0x20,0x20,0x20,0x3c,0x00,
	0x44,0x44,0x28,0x7c,0x10,0x7c,0x10,0x00,
	0x3c,0x04,0x04,0x04,0x04,0x04,0x3c,0x00,
	0x10,0x28,0x44,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x7e,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x3c,0x04,0x3c,0x44,0x3a,0x00,
	0x40,0x40,0x5c,0x62,0x42,0x62,0x5c,0x00,
	0x00,0x00,0x3c,0x42,0x40,0x42,0x3c,0x00,
	0x02,0x02,0x3a,0x46,0x42,0x46,0x3a,0x00,
	0x00,0x00,0x3c,0x42,0x7e,0x40,0x3c,0x00,
	0x0c,0x12,0x10,0x7c,0x10,0x10,0x10,0x00,
	0x00,0x00,0x3a,0x46,0x46,0x3a,0x02,0x3c,
	0x40,0x40,0x5c,0x62,0x42,0x42,0x42,0x00,
	0x08,0x00,0x18,0x08,0x08,0x08,0x1c,0x00,
	0x04,0x00,0x0c,0x04,0x04,0x04,0x44,0x38,
	0x40,0x40,0x44,0x48,0x50,0x68,0x44,0x00,
	0x18,0x08,0x08,0x08,0x08,0x08,0x1c,0x00,
	0x00,0x00,0xec,0x92,0x92,0x92,0x92,0x00,
	0x00,0x00,0x5c,0x62,0x42,0x42,0x42,0x00,
	0x00,0x00,0x3c,0x42,0x42,0x42,0x3c,0x00,
	0x00,0x00,0x5c,0x62,0x62,0x5c,0x40,0x40,
	0x00,0x00,0x3a,0x46,0x46,0x3a,0x02,0x02,
	0x00,0x00,0x5c,0x62,0x40,0x40,0x40,0x00,
	0x00,0x00,0x3e,0x40,0x3c,0x02,0x7c,0x00,
	0x10,0x10,0x7c,0x10,0x10,0x12,0x0c,0x00,
	0x00,0x00,0x42,0x42,0x42,0x46,0x3a,0x00,
	0x00,0x00,0x42,0x42,0x42,0x24,0x18,0x00,
	0x00,0x00,0x82,0x92,0x92,0x92,0x6c,0x00,
	0x00,0x00,0x42,0x24,0x18,0x24,0x42,0x00,
	0x00,0x00,0x42,0x42,0x46,0x3a,0x02,0x3c,
	0x00,0x00,0x7e,0x04,0x18,0x20,0x7e,0x00,
	0x1c,0x20,0x20,0x40,0x20,0x20,0x1c,0x00,
	0x10,0x10,0x00,0x00,0x00,0x10,0x10,0x00,
	0x70,0x08,0x08,0x04,0x08,0x08,0x70,0x00,
	0x60,0x92,0x0c,0x00,0x00,0x00,0x00,0x00,
	0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
];