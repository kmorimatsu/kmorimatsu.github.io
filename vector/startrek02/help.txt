＜BASIC言語の書式＞
BASICプログラムの記述は、行番号式、ラベル式、その混合、いずれの方法でも構
いません。以下、仕様について述べます。

＜利用可能な変数型＞
利用できる変数の型は、32ビット符号付整数(-2147483648 ～ +2147483647)と、
文字列型の２種類です。文字列の末端部には0x00が付加されます。

A-Zの２６個の整数型変数が利用可能です。文字列として扱う場合はA$のように記
述します。ただし、A（整数型）とA$（文字列型）を同時に使用することは出来ま
せん。

整数型の定数は、１０進法で記述します。１６進法を使う場合、「$1200」のよう
に、頭に「$」を付加するか、「0x1200」の様に表記して下さい。

文字列型の定数は、「"」で囲って記述してください。「"」を使用する場合は、
「CHR$($22)」のように記述することが出来ます。

＜命令＞
以下、x, y, z等は整数値を、x$, y$, z$は文字列を指します。xxx, yyy, zzz, 
www等は任意のステートメントを指します。[ ]は省略可能で有る事を示します。

命令同士を「:」で区切ることにより、一行で複数のコマンドを処理すること
が出来ます。

BGCOLOR r,g,b
	背景色指定。
CLEAR
	すべての文字列型変数と整数型配列を破棄し、整数値を０とする。
CLS
	スクリーン消去。
COLOR x
	テキスト色指定。
CURSOR x,y
	カーソル位置指定。
DATA x[,y[,z[...]]]
	データー列を整数値で指定する。
DIM xxx [, yyy [, zzz [, ... ]]]
	整数型の一次元配列を割り当てる。
	xxx,yyy,zzzは、例えば「A(10)」のように記述する。この場合、A(0)から
	A(10)までの１１個の整数型変数が確保される。
DRAWCOUNT
	DRAWCOUNT値を指定する。DRAWCOUNT値に付いては、DRAWCOUNT()関数を
	参照。
END
	BASICプログラムを停止する。
EXEC x[,y[,z[...]]]
	機械語を実行する。ただし、x,y,zは32ビット整数値。
FOR x=yyy TO zzz [ STEP www ]
NEXT
	yyyで示された計算結果をxに代入し、xの値がzzzになるまで次のNEXT文
	までのステートメントを、繰り返し実行する。繰り返しのたび、xの値は
	wwwずつ増加する（省略された場合は１ずつ）。「NEXT」の次に何も記述
	しないことに注意。
GOSUB xxx
	現在の実行位置を記憶し、xxx行目に移動する。
GOTO xxx
	xxx行目に移動する。
IF x THEN yyy [ ELSE zzz ]
	xが０以外のとき、yyyを、０のときzzzを実行
LABEL xxx
	GOTO/GOSUBのジャンプ先を登録する。xxxは、英数字６文字以内の文字列。
[LET] x=yyy
	yで示された計算結果を、xに代入する。「LET」は省略可。
[LET] x$=yyy
	yyyで示された文字列（もしくは連結結果）を、x$に代入する。「LET」
	は省略可。
MUSIC x$
	BGMを演奏する。詳細は、下記<MUSIC>の項を参照。
PALETTE n,r,g,b
	パレット指定。
POKE x,y
	xで示される物理的アドレスに、yで示される値(１バイト値)を書き込む。
PRINT [ xまたはx$ [ ,または; [ yまたはy$ [ ... ]]]]
	ディスプレイに、整数値または文字列を表示する。「;」を使用した場
	合、次の表示が続けて行われる。「,」を使用した場合、１０文字ずつ
	に区切って表示される。どちらも使用しない場合、次の表示は行を変え
	て行われる。
REM xxx
	何も実行しない
RESTORE xxx
	DATA読み出し開始位置を指定。xxxは行番号もしくはラベル。
RETURN
	最後に実行されたGOSUB文の次のステートメントに移動する。戻り値を指
	定することがができる。この場合の戻り値はGOSUB()関数にて取得が可能。
SOUND xxx
	効果音を再生する。詳細は、下記<SOUND>の項を参照。xxxは行番号もしく
	はラベル。

＜関数＞
以下、x, y, zは整数値を、x$, y$, z$は文字列を指します。[ ]は省略可能で有る事
を示します。

ABS(x)
	xの絶対値を返す。
ASC(x$)
	文字列の最初の一文字の、アスキーコードを返す。
DRAWCOUNT()
	DRAWCOUNT値を得る。DRAWCOUNTは１６ビット整数値で、1/60秒ごとに１ずつ
	増える。
GOSUB(xxx)
	GOSUBと同じだが、戻り値(RETURNを参照)を得ることが出来る。xxxは、ラベ
	ルもしくは行番号。
KEYS([x])
	キー入力を得る。xの値は以下の通り。xを指定しない場合は、x=63と同じ。
		KEYUP:    1
		KEYDOWN:  2
		KEYLEFT:  4
		KEYRIGHT: 8
		KEYSTART: 16
		KEYFIRE:  32
LEN(x$)
	文字列の長さを返す。
MUSIC()
	BGMの演奏の残り数を返す。
NOT(x)
	x=0の場合に１を、そうでない場合に０を返す。
PEEK(x)
	xで示される物理アドレスから１バイト読み取り、返す。
READ()
	DATA文の後から、一つずつデーター（整数値）を読み出す。
RND()
	0から32767までの擬似乱数を返す。
SGN(x)
	xの符号(-1, 0, または1)を返す。
STRNCMP(x$,y$,z)
	２つの文字列のうちz文字を比較し、結果を返す。同じ文字列の場合は０。
TVRAM([x])
	ビデオRAMのx番目の内容を、バイト値で返す。xを省略した場合、ビデオ
	RAMの開始位置の物理アドレスを返す。
VAL(x$)
	１０進数もしくは１６進数文字列としてのx$の値を、整数値で返す。
A$(x [,y])など
	xの値が０の場合、文字列全体を返す。
	xの値が正の場合、xで示される位置より右側の文字列を返す。
	xの値が負のとき、文字列の右側x文字を返す。
	yが指定された場合、y文字分の文字列を返す。
CHR$(x)
	xをアスキーコードとする文字を返す。
DEC$(x)
	xの値を、１０進数の文字列として返す。
HEX$(x [,y])
	xの値を、１６進数の文字列として返す。yが指定された場合、yバイト長の
	文字列になる。
INKEY$()
	現在押されているキーのASCII値を返す。押されていない場合は、０。
INPUT$()
	文字列入力状態になり、入力が終了すると(Enterが押されると)文字列を返す。

＜演算子＞
-x
	符号を反転
x + y
	整数加算
x - y
	整数減算
x * y
	整数乗算
x / y
	整数除算
x % y
	整数剰余
x = y
	２つの整数値が等しい場合に１、そうでないときに０
x != y
	２つの整数値が等しい場合に０、そうでないときに１
x < y
	xがyより小さい場合に１、そうでないときに０
x <= y
	xがyより小さいか等しい場合に１、そうでないときに０
x > y
	xがyより多きい場合に１、そうでないときに０
x >= y
	xがyより多きいか等しい場合に１、そうでないときに０
x AND y
	xとyの値のビットごとの AND（論理積でないことに注意）
x OR y
	xとyの値のビットごとの OR
x XOR y
	xとyの値のビットごとの XOR
x$ + y$
	文字列の連結

なお、整数演算子の優先順位は、優先度が高いものから以下の順です。

+ - (単項演算子)
* / %
+ - (加算・減算)
< <= > >=
= !=
XOR
AND
OR

＜MUSIC＞
MUSIC命令では、BGM用のデーターを文字列で指定します。文字列の書式は、ABC 
notationに準拠しています。ただし、すべての記法が使えるわけではありません。
なお、キーや速度などのデフォルト設定値は以下の通りです。

Q: 1/4=90
L: 1/8
K: C

BGM演奏時に一度に設定できる音の数は、31迄です。これを超えて音楽を再生したい
場合は、MUSIC()関数の戻り値を調べ、その値が十分小さくなってから、次のMUSIC命
令を実行するようにします。

添付のmusic.txtに、使い方に関するサンプルがありますので、参考にして下さい。

＜SOUND＞
SOUND命令では、DATA列のデーターを、行番号もしくはラベルで指定します。SOUND命
令による効果音再生中は、BGMは再生されません。また、前の効果音が終わる前に次
のSOUND命令を実行すると、前の効果音の再生は停止し、新しい効果音がすぐに再生
されます。

DATA列では、３２ビット整数値として、交換音を表現します。この整数値の下位１６
ビットは周波数の指定です。2048が440Hz(ラの音)に対応します。値が大きくなるほ
ど、より低い音が出ます。上位１６ビットは、音の長さです。1が、1/60秒に相当し
ます。最後に、65535以下の値で、効果音の繰り返し回数を指定します。これらのデー
ターの数は、32を超えないようにして下さい。

添付のsound.txtに、使い方に関するサンプルがありますので、参考にして下さい。
